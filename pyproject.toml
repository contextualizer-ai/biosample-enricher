[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "biosample-enricher"
version = "0.1.0"
description = "Infer AI-friendly metadata about biosamples from multiple sources"
readme = "README.md"
license = "MIT"
authors = [
    { name = "contextualizer-ai", email = "info@contextualizer.ai" },
]
requires-python = ">=3.11"
keywords = ["biosamples", "metadata", "enrichment", "bioinformatics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "click>=8.1.0",
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "requests-cache>=1.0.0",
    "rich>=13.0.0",
    # Schema analysis dependencies
    "genson>=1.2.2",
    "pymongo>=4.5.0",
    "pandas>=2.0.0",
]


[project.scripts]
biosample-enricher = "biosample_enricher.cli:main"
# Cache management
http-cache-manager = "biosample_enricher.cache_management:cli"
# Demonstration scripts
nmdc-adapter-demo = "biosample_enricher.nmdc_adapter_demo:main"
gold-adapter-demo = "biosample_enricher.gold_adapter_demo:main"
unified-adapter-demo = "biosample_enricher.unified_adapter_demo:main"
mongodb-connection-demo = "biosample_enricher.mongodb_connection_demo:main"
pydantic-validation-demo = "biosample_enricher.pydantic_validation_demo:main"
id-retrieval-demo = "biosample_enricher.id_retrieval_demo:main"
random-sampling-demo = "biosample_enricher.random_sampling_demo:main"
synthetic-validation-demo = "biosample_enricher.synthetic_validation_demo:main"

[project.urls]
Homepage = "https://github.com/contextualizer-ai/biosample-enricher"
Repository = "https://github.com/contextualizer-ai/biosample-enricher"
Issues = "https://github.com/contextualizer-ai/biosample-enricher/issues"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = "genson"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "biosample_enricher.nmdc_adapter_demo",
    "biosample_enricher.gold_adapter_demo", 
    "biosample_enricher.unified_adapter_demo",
    "biosample_enricher.mongodb_connection_demo",
    "biosample_enricher.pydantic_validation_demo",
    "biosample_enricher.id_retrieval_demo",
    "biosample_enricher.random_sampling_demo",
    "biosample_enricher.synthetic_validation_demo"
]
disallow_untyped_defs = false
disallow_incomplete_defs = false
warn_return_any = false
check_untyped_defs = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_any_expr = false
disallow_subclassing_any = false
warn_unreachable = false
strict_equality = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=biosample_enricher",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselected with -m 'not slow')",
    "network: marks tests as requiring network (deselected in CI)",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["biosample_enricher"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.12.12",
    "types-requests>=2.32.4.20250809",
    "pandas-stubs>=2.0.0",
    "deptry>=0.23.1",
]
