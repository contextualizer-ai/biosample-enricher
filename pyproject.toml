[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "biosample-enricher"
version = "0.1.0"
description = "Infer AI-friendly metadata about biosamples from multiple sources"
readme = "README.md"
license = "MIT"
authors = [
    { name = "contextualizer-ai", email = "info@contextualizer.ai" },
]
requires-python = ">=3.11"
keywords = ["biosamples", "metadata", "enrichment", "bioinformatics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "click>=8.1.0",
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "requests-cache>=1.0.0",
    "rich>=13.0.0",
    # Schema analysis dependencies
    "genson>=1.2.2",
    "pymongo>=4.5.0",
    "pandas>=2.0.0",
    "python-dotenv>=1.1.1",
    "seaborn>=0.13.2",
    "matplotlib>=3.10.6",
    "pyyaml>=6.0.2",
    "numpy>=2.3.3",
    "meteostat>=1.7.4",
    # Soil enrichment dependencies
    "rasterio>=1.3.0",
]


[project.scripts]
biosample-enricher = "biosample_enricher.cli:main"
# Elevation service CLI
elevation-lookup = "biosample_enricher.cli_elevation:elevation_cli"
elevation-demos = "biosample_enricher.elevation_demos:cli"
biosample-elevation = "biosample_enricher.cli_biosample_elevation:cli"
# Cache management
http-cache-manager = "biosample_enricher.cache_management:cli"
# Schema analysis tools
schema-inference = "biosample_enricher.schema_inference:main"
schema-statistics = "biosample_enricher.schema_statistics:main"
# Utility commands
biosample-version = "biosample_enricher.cli:show_version"
# Demonstration scripts
nmdc-adapter-demo = "biosample_enricher.nmdc_adapter_demo:main"
gold-adapter-demo = "biosample_enricher.gold_adapter_demo:main"
unified-adapter-demo = "biosample_enricher.unified_adapter_demo:main"
mongodb-connection-demo = "biosample_enricher.mongodb_connection_demo:main"
pydantic-validation-demo = "biosample_enricher.pydantic_validation_demo:main"
id-retrieval-demo = "biosample_enricher.id_retrieval_demo:main"
random-sampling-demo = "biosample_enricher.random_sampling_demo:main"
synthetic-validation-demo = "biosample_enricher.synthetic_validation_demo:main"

[project.urls]
Homepage = "https://github.com/contextualizer-ai/biosample-enricher"
Repository = "https://github.com/contextualizer-ai/biosample-enricher"
Issues = "https://github.com/contextualizer-ai/biosample-enricher/issues"

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    # Line length: some strings (URLs, example data) cannot be reasonably split
    "E501",
    # Function calls in defaults: Click decorators require this pattern
    "B008",
]

[tool.ruff.lint.per-file-ignores]
# Tests require assert statements for pytest
"tests/**/*" = ["S101"]
# Test fixtures may have unused arguments by design
"tests/conftest.py" = ["ARG001"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
# Tests often need more flexible typing for mocking and fixtures
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
# Third-party library without type stubs
module = "genson"
ignore_missing_imports = true


[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=biosample_enricher",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselected with -m 'not slow')",
    "network: marks tests as requiring network (deselected in CI)",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "flaky: marks tests as flaky (may fail intermittently due to external dependencies)",
]

[tool.coverage.run]
source = ["biosample_enricher"]
branch = true

[tool.coverage.report]
exclude_lines = [
    # Standard Python patterns that are not testable
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    # Defensive programming patterns
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-rerunfailures>=14.0",
    "ruff>=0.12.12",
    "types-requests>=2.32.4.20250809",
    "pandas-stubs>=2.0.0",
    "deptry>=0.23.1",
    "types-pyyaml>=6.0.12.20250822",
    "types-seaborn>=0.13.2.20250809",
]
